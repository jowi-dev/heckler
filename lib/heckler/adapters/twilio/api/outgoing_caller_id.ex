# NOTE: This file is auto generated by OpenAPI Generator 7.10.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Heckler.Adapters.Twilio.Api.OutgoingCallerId do
  @moduledoc """
  API calls for all endpoints tagged `OutgoingCallerId`.
  """

  alias Heckler.Adapters.Twilio.Connection
  import Heckler.Adapters.Twilio.RequestBuilder

  @doc """
  Delete the caller-id specified from the account

  ### Parameters

  - `connection` (Heckler.Adapters.Twilio.Connection): Connection to server
  - `account_sid` (String.t): The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to delete.
  - `sid` (String.t): The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to delete.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t()}` on failure
  """
  @spec delete_outgoing_caller_id(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, nil} | {:error, Tesla.Env.t()}
  def delete_outgoing_caller_id(connection, account_sid, sid, _opts \\ []) do
    request =
      %{}
      |> method(:delete)
      |> url("/2010-04-01/Accounts/#{account_sid}/OutgoingCallerIds/#{sid}.json")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false}
    ])
  end

  @doc """
  Fetch an outgoing-caller-id belonging to the account used to make the request

  ### Parameters

  - `connection` (Heckler.Adapters.Twilio.Connection): Connection to server
  - `account_sid` (String.t): The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resource to fetch.
  - `sid` (String.t): The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to fetch.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, Heckler.Adapters.Twilio.Model.AccountOutgoingCallerId.t()}` on success
  - `{:error, Tesla.Env.t()}` on failure
  """
  @spec fetch_outgoing_caller_id(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, Heckler.Adapters.Twilio.Model.AccountOutgoingCallerId.t()}
          | {:error, Tesla.Env.t()}
  def fetch_outgoing_caller_id(connection, account_sid, sid, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/2010-04-01/Accounts/#{account_sid}/OutgoingCallerIds/#{sid}.json")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, Heckler.Adapters.Twilio.Model.AccountOutgoingCallerId}
    ])
  end

  @doc """
  Retrieve a list of outgoing-caller-ids belonging to the account used to make the request

  ### Parameters

  - `connection` (Heckler.Adapters.Twilio.Connection): Connection to server
  - `account_sid` (String.t): The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to read.
  - `opts` (keyword): Optional parameters
    - `:PhoneNumber` (String.t): The phone number of the OutgoingCallerId resources to read.
    - `:FriendlyName` (String.t): The string that identifies the OutgoingCallerId resources to read.
    - `:PageSize` (integer()): How many resources to return in each list page. The default is 50, and the maximum is 1000.
    - `:Page` (integer()): The page index. This value is simply for client state.
    - `:PageToken` (String.t): The page token. This is provided by the API.

  ### Returns

  - `{:ok, Heckler.Adapters.Twilio.Model.ListOutgoingCallerIdResponse.t()}` on success
  - `{:error, Tesla.Env.t()}` on failure
  """
  @spec list_outgoing_caller_id(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, Heckler.Adapters.Twilio.Model.ListOutgoingCallerIdResponse.t()}
          | {:error, Tesla.Env.t()}
  def list_outgoing_caller_id(connection, account_sid, opts \\ []) do
    optional_params = %{
      :PhoneNumber => :query,
      :FriendlyName => :query,
      :PageSize => :query,
      :Page => :query,
      :PageToken => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/2010-04-01/Accounts/#{account_sid}/OutgoingCallerIds.json")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, Heckler.Adapters.Twilio.Model.ListOutgoingCallerIdResponse}
    ])
  end

  @doc """
  Updates the caller-id

  ### Parameters

  - `connection` (Heckler.Adapters.Twilio.Connection): Connection to server
  - `account_sid` (String.t): The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to update.
  - `sid` (String.t): The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to update.
  - `opts` (keyword): Optional parameters
    - `:FriendlyName` (String.t): A descriptive string that you create to describe the resource. It can be up to 64 characters long.

  ### Returns

  - `{:ok, Heckler.Adapters.Twilio.Model.AccountOutgoingCallerId.t()}` on success
  - `{:error, Tesla.Env.t()}` on failure
  """
  @spec update_outgoing_caller_id(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, Heckler.Adapters.Twilio.Model.AccountOutgoingCallerId.t()}
          | {:error, Tesla.Env.t()}
  def update_outgoing_caller_id(connection, account_sid, sid, opts \\ []) do
    optional_params = %{
      :FriendlyName => :form
    }

    request =
      %{}
      |> method(:post)
      |> url("/2010-04-01/Accounts/#{account_sid}/OutgoingCallerIds/#{sid}.json")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, Heckler.Adapters.Twilio.Model.AccountOutgoingCallerId}
    ])
  end
end
